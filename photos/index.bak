<?php
class customPage extends page {    
    public $title = 'All Photos';
    
    function init(){
    }
    
    function content(){
?>
<div class="widget">
    <?php if($this->loggedIn){ ?>
    <div style="position:absolute;right:0;top:0;">
    <a class="btn" href="<?php echo $this->escoProfileURL.'/photos/';?>" style="float:right"><img src="/_inc/img/icons/picture.png"> My Photos</a>
    <a class="btn" href="<?php echo $this->escoProfileURL.'/photos/favorites';?>" style="float:right;margin-right:5px;"><img src="/_inc/img/icons/fav.png"> My Favorites</a>
    </div>
    <?php } ?>
    
    <h1>All Photos on escoNet</h1>
    
    <input style="width:200px;"><button>Search Photos</button>

    <p style="text-align:right;">Sort by:
        <?php if(isset($_GET['sort']) && $_GET['sort']=='1'){ ?>
        Photo Date (oldest first)
        <?php }else{ ?>
        <a href="/photos/?sort=1">Photo Date (oldest first)</a>
        <?php } ?>
        |
        <?php if(!isset($_GET['sort']) || $_GET['sort']!='1'){ ?>
        Upload Date (newest first)
        <?php }else{ ?>
        <a href="/photos/">Upload Date (newest first)</a>
        <?php } ?>
    </p>
    
    <br>
    
    
    
        <?php {

            $SORTBY = 'ORDER BY `id` DESC';
        
            if(isset($_GET['sort'])){
                $sort = intval($_GET['sort']);
                if($sort==1){
                    $SORTBY = 'ORDER BY `datetaken` ASC';
                }
            }
            
            //show($this->user);


            // How many items to show per page
            $RESULTS_PER_PAGE = 60;
            // How pages to show until the ellipsis (...)
            // Must be an odd number (not evenly divisable by 2. E.g., 1, 3, 5, 7, 9, 11, 13, etc)
            $MAX_PAGE_GROUP = 9;            


            $urlQuery = array();
            parse_str($_SERVER['QUERY_STRING'], $urlQuery);

            // Remove the first two ( internal page-loading stuff )
            //array_shift($urlQuery);
            //array_shift($urlQuery);
            if(isset($urlQuery['page'])) unset($urlQuery['page']);
            if(isset($urlQuery['id'])) unset($urlQuery['id']);
            if(isset($urlQuery['usr-id'])) unset($urlQuery['usr-id']);

            if(!isset($urlQuery['p']) || $urlQuery['p']=='' || intval($urlQuery['p'] < 1) )
                $urlQuery['p'] = 1;
            else
                $urlQuery['p'] = intval($urlQuery['p']);



            // Let's first see how many rows come up with the already constructed WHERE clause.
            $countQuery   = "SELECT COUNT(id) FROM esco_photos WHERE `unlisted`=0";
            $resultsNum = mysqli_fetch_array(mysqli_query($this->link, $countQuery));
            $resultsNum = $resultsNum[0];

            // Divide the results per page
            $totalPages = ceil( $resultsNum / $RESULTS_PER_PAGE );

            // Offsets

            if($urlQuery['p']>$totalPages)
                $urlQuery['p'] = $totalPages;

            $startPageOffset = ($RESULTS_PER_PAGE * $urlQuery['p']) - $RESULTS_PER_PAGE;

            if($startPageOffset<0)
                $startPageOffset = 0;

            $LIMIT = 'LIMIT '.$startPageOffset.','.$RESULTS_PER_PAGE;


            $photoSelect = "SELECT * FROM esco_photos WHERE `unlisted`=0 $SORTBY $LIMIT";


            $photoResult = mysqli_query($this->link, $photoSelect);


            //
            // While Loop and HTML output
            //


            //
            // HTML Pagination Buttons
            //

            $currentURL = $_SERVER['REDIRECT_URL']; // DOES NOT CONTAIN QUERY STRINGS

            // Page Groups

            $page_group_start = $urlQuery['p'] - floor( $MAX_PAGE_GROUP / 2 );
            $page_group_end = $urlQuery['p'] + floor( $MAX_PAGE_GROUP / 2 );

            //$diff = ;

            if($page_group_start<1){
                $page_group_end += 1-$page_group_start;
                $page_group_start = 1;
            }

            if($page_group_end>$totalPages){
                $page_group_start += $totalPages-$page_group_end;
                $page_group_end = $totalPages;    
            }

            // Fix for when the page number is less $MAX_PAGE_GROUP

            if($page_group_start<1)
                $page_group_start = 1;


            $html_pagination_number_buttons = '';

            $tmpQueryArray = $urlQuery;
            unset($tmpQueryArray['p']);

            if($page_group_start > 1)
            {
                $href = $currentURL . '?p=' . 1;

                // Reconstruct the query
                foreach ($tmpQueryArray as $key => $value)
                    $href .= "&amp;$key=$value";

                $html_pagination_number_buttons .= '<a href="'.$href.'" class="btn">...</a>';
            }

            for($i=$page_group_start; $i<=$page_group_end; $i++)
            {
                $href = $currentURL . '?p='.$i;

                // Reconstruct the query
                foreach ($tmpQueryArray as $key => $value)
                    $href .= "&amp;$key=$value";

                // HTML/CSS stuff

                $cssClass = 'btn';

                if($urlQuery['p']==$i){
                    $cssClass = 'btn selected';
                }

                // Remove the link if there's only one page
                if($totalPages==1) $href = '#';

                $html_pagination_number_buttons .= '<a href="'.$href.'" class="'.$cssClass.'">'.$i.'</a>';
            }


            if($page_group_end < $totalPages)
            {
                $href = $currentURL . '?p=' . $totalPages;

                // Reconstruct the query
                foreach ($tmpQueryArray as $key => $value)
                    $href .= "&amp;$key=$value";

                $html_pagination_number_buttons .= '<a href="'.$href.'" class="btn">...</a>';
            }


            $maxPossible = $totalPages;
            $minPossible = 1;

            $next = ($urlQuery['p']+1);
            $prev = ($urlQuery['p']-1);

            $prev_href = $currentURL . '?p='.$prev;
            $next_href = $currentURL . '?p='.$next;


            // Reconstruct the queries
            foreach ($tmpQueryArray as $key => $value)
                $prev_href .= "&amp;$key=$value";
            foreach ($tmpQueryArray as $key => $value)
                $next_href .= "&amp;$key=$value";

            $html_pagination_prev_button = '<a class="btn" href="'.$prev_href.'">&lt; Prev</a>';
            $html_pagination_next_button = '<a class="btn" href="'.$next_href.'">Next &gt;</a>';

            if($prev < $minPossible) $html_pagination_prev_button = '';
            if($next > $maxPossible) $html_pagination_next_button = '';

            $divider = '<span class="divider"></span>';

            if($resultsNum!=0)
                $pagination_html = '<div class="pagination">'.$html_pagination_prev_button . $divider . $html_pagination_number_buttons . $divider . $html_pagination_next_button.'</div>';
            else
                $pagination_html = '';

            unset($tmpQueryArray);       


            $document = new DOMDocument;    

            $table = $document->createElement('table');               
            $tr = $document->createElement('tr');
        
            $table->setAttribute('cellspacing', 0);
            $table->setAttribute('cellpadding', 0);

            $i = 0;
            while ($photoRow = mysqli_fetch_assoc($photoResult)) {
                $i++;
                
                $query = 'SELECT * FROM esco_users WHERE id="'.$photoRow['author'].'"';
                $result = mysqli_query($this->link, $query);
                $num_rows = mysqli_num_rows($result);
                
                $this->user = mysqli_fetch_assoc($result);
                $this->user['photoBase'] = '/user/'.$this->user['id'].'/'.urlify($this->user['name'].'_'.$this->user['lastname']).'/photos';                
                
                
                
                $photoTitle = $photoRow['title'];
                
                if($photoTitle!=''){ $photoTitle = $photoRow['title']; }else{
                    $photoTitle = $photoRow['name'];
                    $photoTitle = explode('_', $photoTitle);
                    
                    array_pop($photoTitle);
                    array_pop($photoTitle);
                    
                    $photoTitle = implode('_', $photoTitle);
                }
                
                $photoURL = $this->user['photoBase'] . '/'. $photoRow['id'] . '/' . urlify($photoTitle);
                
                
                if( $i==4 ){
                    $i = 1;
                    // Add the row now and create another row
                    $table->appendChild($tr);
                    $tr = $document->createElement('tr');
                }
                 
                $td = $document->createElement('td');
                
                $a = $document->createElement('a');
                $a->setAttribute('href', $photoURL);
                $td->appendChild($a);
                
                $img = $document->createElement('img');
                $a->appendChild($img);
                


                
                
                $commentAuthorInfo = mysqli_fetch_row( mysqli_query($this->link, "SELECT * FROM esco_users WHERE id='".$photoRow['author']."' ") );

                $imageName = $photoRow['name'];

                $format = $photoRow['format']; 
                switch($format){
                    case 0:
                        $format = '.jpg';
                        break;
                    case 1:
                        $format = '.png';
                        break;
                    case 2:
                        $format = '.gif';
                        break;
                }

                $imageFile = $imageName . '_c' . $format;

                $parts = explode('_', $imageName);
                $serverID = $parts[ count($parts)-2 ];

                $photo = 'http://media.esco.net/img/social/photos/'.$photoRow['author'].'/'.$imageFile;
                
                $img->setAttribute('src', $photo);
                $img->setAttribute('alt', $photoTitle);
                $img->setAttribute('style', 'width:320px; height:160px;');
                //$img->setAttribute('style', 'width:50px; height:50px;');
                
                // Add the cell
                $tr->appendChild( $td );
            }

            $table->appendChild($tr);
            $document->appendChild( $table );
    
            $table->setAttribute('class', 'image-grid-all');
            
            echo $document->saveHTML(); 

            echo '<br>';
            
            echo $pagination_html;            

                //while ($commentRow = mysqli_fetch_assoc($searchResult)) {
                //}
        } ?>    
</div>
<?php
    }
}

new customPage();

